<!-- 后缀子串：以某个字符串最后一个字符为尾字符的子串（不包含字符串自身），比如上面的 ababa，后缀子串为 baba、aba、ba、a；
前缀子串：以某个字符串第一个字符为首字符的子串（不包含字符串自身），还是以 ababa 为例，前缀子串为 a、aba、abab；
最长可匹配后缀子串：后缀子串与前缀子串最长可匹配子串，也可叫做共有子串，以 ababa 为例，自然是 aba 了，长度为 3；
最长可匹配前缀子串：与上面定义相对，即前缀子串与后缀子串最长可匹配子串。最长可匹配前缀子串和最长可匹配后缀子串肯定是一样的。 -->

<?php
// KMP 算法 PHP 实现代码，$a 表示主串，$n 表示主串长度，$b 表示模式串，$m 表示模式串长度
function generateNexts(){

}

function kmp($a, $n, $b, $m)
{
    $next = generateNexts($b, $m);   // 生成 next 数组
    $j = 0;
    for ($i = 0; $i < $n; $i++) {  // 遍历主串
        while ($j > 0 && $a[$i] != $b[$j]) {  
            // 如果主串字符和模式串字符不相等，
            // 更新模式串坏字符下标位置为好前缀最长可匹配前缀子串尾字符下标+1
            // 然后从这个位置重新开始与主串匹配
            // 相当于前面提到的把模式串向后移动 j - k 位
            $j = $next[$j - 1] + 1;
        }
        if ($a[$i] == $b[$j]) {
            $j++;
        }
        if ($j == $m) {
            return $n - $m + 1;  // 全部相等，找到匹配位置
        }
    }
    return -1;

    
}

// a b a b a b a .b a b a c

// a b a b a c 

// 5 3

// 6 4

// 7 5

// 7 3

// 7 1